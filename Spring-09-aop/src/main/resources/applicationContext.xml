<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--注册bean-->
    <bean id="afterLog" class="com.zjy.log.AfterLog">

    </bean>

    <bean id="log" class="com.zjy.log.Log">

    </bean>
    <bean id="userService" class="com.zjy.service.UserServiceImpl">

    </bean>

    <!--    方式1-->
    <!--    配值AOP：需要导入约束-->
   <!-- <aop:config>
        &lt;!&ndash;        需要一个切入点 expression: 表达式 execution：要执行的位置  * * * * *&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.zjy.service.UserServiceImpl.*(..))"/>

        &lt;!&ndash;        添加通知&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>

    &lt;!&ndash;    方式二：自定义类&ndash;&gt;
    <bean id="diyPointCut" class="com.zjy.diy.DiyPointCut">

    </bean>

    &lt;!&ndash;    ref：要引用的类&ndash;&gt;
    <aop:config>
        <aop:aspect ref="diyPointCut">
            &lt;!&ndash;            切入点&ndash;&gt;
            <aop:pointcut id="point" expression="execution(* com.zjy.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;            通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>-->

<!--方式三-->
    <bean id="annotationPointCut" class="com.zjy.diy.AnnotationPointCut"/>
<!--    开去注解支持, 默认false,即JKD, 为true时使用cglib-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>